# Generated by Django 5.2.3 on 2025-08-09 23:41
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

class Migration(migrations.Migration):

    dependencies = [
        ('messaging', '0002_message_importance_message_reply_to'),
        ('projects', '0003_project_collaborators_invitation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # 1) Remove reply_to safely (DB: drop only if it exists)
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.RemoveField(model_name='message', name='reply_to'),
            ],
            database_operations=[
                migrations.RunSQL(
                    sql="ALTER TABLE messaging_message DROP COLUMN IF EXISTS reply_to_id;",
                    reverse_sql=migrations.RunSQL.noop,
                )
            ],
        ),

        # 2) Subject can be blank
        migrations.AlterField(
            model_name='message',
            name='subject',
            field=models.CharField(max_length=500, blank=True),
        ),

        # 3) Tell Django that Conversation exists, but don't try to (re)create the table
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='Conversation',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('created_at', models.DateTimeField(auto_now_add=True)),
                        ('updated_at', models.DateTimeField(auto_now=True)),
                        ('participants', models.ManyToManyField(related_name='conversations', to=settings.AUTH_USER_MODEL)),
                        ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversations', to='projects.project')),
                    ],
                ),
            ],
            database_operations=[
                # No DB op: table already exists
            ],
        ),

        # 4) Add Message.conversation in state; DB: add column only if missing
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AddField(
                    model_name='message',
                    name='conversation',
                    field=models.ForeignKey(
                        to='messaging.conversation',
                        related_name='messages',
                        on_delete=django.db.models.deletion.CASCADE,
                        null=True,
                        blank=True,
                    ),
                ),
            ],
            database_operations=[
                migrations.RunSQL(
                    sql="""
                        ALTER TABLE messaging_message
                        ADD COLUMN IF NOT EXISTS conversation_id bigint;
                        DO $$
                        BEGIN
                            IF NOT EXISTS (
                                SELECT 1 FROM pg_constraint
                                WHERE conname = 'messaging_message_conversation_id_fkey'
                            ) THEN
                                ALTER TABLE messaging_message
                                ADD CONSTRAINT messaging_message_conversation_id_fkey
                                FOREIGN KEY (conversation_id)
                                REFERENCES messaging_conversation (id)
                                DEFERRABLE INITIALLY DEFERRED;
                            END IF;
                        END$$;
                    """,
                    reverse_sql=migrations.RunSQL.noop,
                )
            ],
        ),

        # 5) New attachments table (create normally; it doesn't exist yet)
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='message_attachments/')),
                ('original_name', models.CharField(max_length=255, blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='messaging.message')),
            ],
        ),
    ]
